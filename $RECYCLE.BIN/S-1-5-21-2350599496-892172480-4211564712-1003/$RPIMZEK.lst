
rust.bin:     file format binary


Disassembly of section .data:

0000000000000000 <.data>:
       0:	48                   	rex.W
       1:	65 6c                	gs insb (%dx),%es:(%rdi)
       3:	6c                   	insb   (%dx),%es:(%rdi)
       4:	6f                   	outsl  %ds:(%rsi),(%dx)
       5:	20 57 6f             	and    %dl,0x6f(%rdi)
       8:	72 6c                	jb     0x76
       a:	64 20 66 72          	and    %ah,%fs:0x72(%rsi)
       e:	6f                   	outsl  %ds:(%rsi),(%dx)
       f:	6d                   	insl   (%dx),%es:(%rdi)
      10:	20 52 55             	and    %dl,0x55(%rdx)
      13:	53                   	push   %rbx
      14:	54                   	push   %rsp
      15:	21 73 72             	and    %esi,0x72(%rbx)
      18:	63 2f                	movsxd (%rdi),%ebp
      1a:	6d                   	insl   (%dx),%es:(%rdi)
      1b:	61                   	(bad)  
      1c:	69 6e 2e 72 73 00 00 	imul   $0x7372,0x2e(%rsi),%ebp
	...
      2f:	00 61 74             	add    %ah,0x74(%rcx)
      32:	74 65                	je     0x99
      34:	6d                   	insl   (%dx),%es:(%rdi)
      35:	70 74                	jo     0xab
      37:	20 74 6f 20          	and    %dh,0x20(%rdi,%rbp,2)
      3b:	6d                   	insl   (%dx),%es:(%rdi)
      3c:	75 6c                	jne    0xaa
      3e:	74 69                	je     0xa9
      40:	70 6c                	jo     0xae
      42:	79 20                	jns    0x64
      44:	77 69                	ja     0xaf
      46:	74 68                	je     0xb0
      48:	20 6f 76             	and    %ch,0x76(%rdi)
      4b:	65 72 66             	gs jb  0xb4
      4e:	6c                   	insb   (%dx),%es:(%rdi)
      4f:	6f                   	outsl  %ds:(%rsi),(%dx)
      50:	77 00                	ja     0x52
	...
      5e:	00 00                	add    %al,(%rax)
      60:	61                   	(bad)  
      61:	74 74                	je     0xd7
      63:	65 6d                	gs insl (%dx),%es:(%rdi)
      65:	70 74                	jo     0xdb
      67:	20 74 6f 20          	and    %dh,0x20(%rdi,%rbp,2)
      6b:	61                   	(bad)  
      6c:	64 64 20 77 69       	fs and %dh,%fs:0x69(%rdi)
      71:	74 68                	je     0xdb
      73:	20 6f 76             	and    %ch,0x76(%rdi)
      76:	65 72 66             	gs jb  0xdf
      79:	6c                   	insb   (%dx),%es:(%rdi)
      7a:	6f                   	outsl  %ds:(%rsi),(%dx)
      7b:	77 00                	ja     0x7d
      7d:	00 00                	add    %al,(%rax)
      7f:	00 69 6e             	add    %ch,0x6e(%rcx)
      82:	76 61                	jbe    0xe5
      84:	6c                   	insb   (%dx),%es:(%rdi)
      85:	69 64 20 61 72 67 73 	imul   $0x2f736772,0x61(%rax,%riz,1),%esp
      8c:	2f 
      8d:	72 6f                	jb     0xfe
      8f:	6f                   	outsl  %ds:(%rsi),(%dx)
      90:	74 2f                	je     0xc1
      92:	2e 72 75             	jb,pn  0x10a
      95:	73 74                	jae    0x10b
      97:	75 70                	jne    0x109
      99:	2f                   	(bad)  
      9a:	74 6f                	je     0x10b
      9c:	6f                   	outsl  %ds:(%rsi),(%dx)
      9d:	6c                   	insb   (%dx),%es:(%rdi)
      9e:	63 68 61             	movsxd 0x61(%rax),%ebp
      a1:	69 6e 73 2f 6e 69 67 	imul   $0x67696e2f,0x73(%rsi),%ebp
      a8:	68 74 6c 79 2d       	push   $0x2d796c74
      ad:	78 38                	js     0xe7
      af:	36 5f                	ss pop %rdi
      b1:	36 34 2d             	ss xor $0x2d,%al
      b4:	75 6e                	jne    0x124
      b6:	6b 6e 6f 77          	imul   $0x77,0x6f(%rsi),%ebp
      ba:	6e                   	outsb  %ds:(%rsi),(%dx)
      bb:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
      c0:	78 2d                	js     0xef
      c2:	67 6e                	outsb  %ds:(%esi),(%dx)
      c4:	75 2f                	jne    0xf5
      c6:	6c                   	insb   (%dx),%es:(%rdi)
      c7:	69 62 2f 72 75 73 74 	imul   $0x74737572,0x2f(%rdx),%esp
      ce:	6c                   	insb   (%dx),%es:(%rdi)
      cf:	69 62 2f 73 72 63 2f 	imul   $0x2f637273,0x2f(%rdx),%esp
      d6:	72 75                	jb     0x14d
      d8:	73 74                	jae    0x14e
      da:	2f                   	(bad)  
      db:	6c                   	insb   (%dx),%es:(%rdi)
      dc:	69 62 72 61 72 79 2f 	imul   $0x2f797261,0x72(%rdx),%esp
      e3:	63 6f 72             	movsxd 0x72(%rdi),%ebp
      e6:	65 2f                	gs (bad) 
      e8:	73 72                	jae    0x15c
      ea:	63 2f                	movsxd (%rdi),%ebp
      ec:	66 6d                	insw   (%dx),%es:(%rdi)
      ee:	74 2f                	je     0x11f
      f0:	6d                   	insl   (%dx),%es:(%rdi)
      f1:	6f                   	outsl  %ds:(%rsi),(%dx)
      f2:	64 2e 72 73          	fs jb,pn 0x169
      f6:	2f                   	(bad)  
      f7:	72 6f                	jb     0x168
      f9:	6f                   	outsl  %ds:(%rsi),(%dx)
      fa:	74 2f                	je     0x12b
      fc:	2e 72 75             	jb,pn  0x174
      ff:	73 74                	jae    0x175
     101:	75 70                	jne    0x173
     103:	2f                   	(bad)  
     104:	74 6f                	je     0x175
     106:	6f                   	outsl  %ds:(%rsi),(%dx)
     107:	6c                   	insb   (%dx),%es:(%rdi)
     108:	63 68 61             	movsxd 0x61(%rax),%ebp
     10b:	69 6e 73 2f 6e 69 67 	imul   $0x67696e2f,0x73(%rsi),%ebp
     112:	68 74 6c 79 2d       	push   $0x2d796c74
     117:	78 38                	js     0x151
     119:	36 5f                	ss pop %rdi
     11b:	36 34 2d             	ss xor $0x2d,%al
     11e:	75 6e                	jne    0x18e
     120:	6b 6e 6f 77          	imul   $0x77,0x6f(%rsi),%ebp
     124:	6e                   	outsb  %ds:(%rsi),(%dx)
     125:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
     12a:	78 2d                	js     0x159
     12c:	67 6e                	outsb  %ds:(%esi),(%dx)
     12e:	75 2f                	jne    0x15f
     130:	6c                   	insb   (%dx),%es:(%rdi)
     131:	69 62 2f 72 75 73 74 	imul   $0x74737572,0x2f(%rdx),%esp
     138:	6c                   	insb   (%dx),%es:(%rdi)
     139:	69 62 2f 73 72 63 2f 	imul   $0x2f637273,0x2f(%rdx),%esp
     140:	72 75                	jb     0x1b7
     142:	73 74                	jae    0x1b8
     144:	2f                   	(bad)  
     145:	6c                   	insb   (%dx),%es:(%rdi)
     146:	69 62 72 61 72 79 2f 	imul   $0x2f797261,0x72(%rdx),%esp
     14d:	63 6f 72             	movsxd 0x72(%rdi),%ebp
     150:	65 2f                	gs (bad) 
     152:	73 72                	jae    0x1c6
     154:	63 2f                	movsxd (%rdi),%ebp
     156:	70 61                	jo     0x1b9
     158:	6e                   	outsb  %ds:(%rsi),(%dx)
     159:	69 63 6b 69 6e 67 2e 	imul   $0x2e676e69,0x6b(%rbx),%esp
     160:	72 73                	jb     0x1d5
	...
     16e:	00 00                	add    %al,(%rax)
     170:	61                   	(bad)  
     171:	74 74                	je     0x1e7
     173:	65 6d                	gs insl (%dx),%es:(%rdi)
     175:	70 74                	jo     0x1eb
     177:	20 74 6f 20          	and    %dh,0x20(%rdi,%rbp,2)
     17b:	61                   	(bad)  
     17c:	64 64 20 77 69       	fs and %dh,%fs:0x69(%rdi)
     181:	74 68                	je     0x1eb
     183:	20 6f 76             	and    %ch,0x76(%rdi)
     186:	65 72 66             	gs jb  0x1ef
     189:	6c                   	insb   (%dx),%es:(%rdi)
     18a:	6f                   	outsl  %ds:(%rsi),(%dx)
     18b:	77 2f                	ja     0x1bc
     18d:	72 6f                	jb     0x1fe
     18f:	6f                   	outsl  %ds:(%rsi),(%dx)
     190:	74 2f                	je     0x1c1
     192:	2e 72 75             	jb,pn  0x20a
     195:	73 74                	jae    0x20b
     197:	75 70                	jne    0x209
     199:	2f                   	(bad)  
     19a:	74 6f                	je     0x20b
     19c:	6f                   	outsl  %ds:(%rsi),(%dx)
     19d:	6c                   	insb   (%dx),%es:(%rdi)
     19e:	63 68 61             	movsxd 0x61(%rax),%ebp
     1a1:	69 6e 73 2f 6e 69 67 	imul   $0x67696e2f,0x73(%rsi),%ebp
     1a8:	68 74 6c 79 2d       	push   $0x2d796c74
     1ad:	78 38                	js     0x1e7
     1af:	36 5f                	ss pop %rdi
     1b1:	36 34 2d             	ss xor $0x2d,%al
     1b4:	75 6e                	jne    0x224
     1b6:	6b 6e 6f 77          	imul   $0x77,0x6f(%rsi),%ebp
     1ba:	6e                   	outsb  %ds:(%rsi),(%dx)
     1bb:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
     1c0:	78 2d                	js     0x1ef
     1c2:	67 6e                	outsb  %ds:(%esi),(%dx)
     1c4:	75 2f                	jne    0x1f5
     1c6:	6c                   	insb   (%dx),%es:(%rdi)
     1c7:	69 62 2f 72 75 73 74 	imul   $0x74737572,0x2f(%rdx),%esp
     1ce:	6c                   	insb   (%dx),%es:(%rdi)
     1cf:	69 62 2f 73 72 63 2f 	imul   $0x2f637273,0x2f(%rdx),%esp
     1d6:	72 75                	jb     0x24d
     1d8:	73 74                	jae    0x24e
     1da:	2f                   	(bad)  
     1db:	6c                   	insb   (%dx),%es:(%rdi)
     1dc:	69 62 72 61 72 79 2f 	imul   $0x2f797261,0x72(%rdx),%esp
     1e3:	63 6f 72             	movsxd 0x72(%rdi),%ebp
     1e6:	65 2f                	gs (bad) 
     1e8:	73 72                	jae    0x25c
     1ea:	63 2f                	movsxd (%rdi),%ebp
     1ec:	69 74 65 72 2f 61 64 	imul   $0x6164612f,0x72(%rbp,%riz,2),%esi
     1f3:	61 
     1f4:	70 74                	jo     0x26a
     1f6:	65 72 73             	gs jb  0x26c
     1f9:	2f                   	(bad)  
     1fa:	65 6e                	outsb  %gs:(%rsi),(%dx)
     1fc:	75 6d                	jne    0x26b
     1fe:	65 72 61             	gs jb  0x262
     201:	74 65                	je     0x268
     203:	2e 72 73             	jb,pn  0x279
     206:	75 6e                	jne    0x276
     208:	73 61                	jae    0x26b
     20a:	66 65 20 70 72       	data16 and %dh,%gs:0x72(%rax)
     20f:	65 63 6f 6e          	movsxd %gs:0x6e(%rdi),%ebp
     213:	64 69 74 69 6f 6e 28 	imul   $0x2973286e,%fs:0x6f(%rcx,%rbp,2),%esi
     21a:	73 29 
     21c:	20 76 69             	and    %dh,0x69(%rsi)
     21f:	6f                   	outsl  %ds:(%rsi),(%dx)
     220:	6c                   	insb   (%dx),%es:(%rdi)
     221:	61                   	(bad)  
     222:	74 65                	je     0x289
     224:	64 3a 20             	cmp    %fs:(%rax),%ah
     227:	4e 6f                	rex.WRX outsl %ds:(%rsi),(%dx)
     229:	6e                   	outsb  %ds:(%rsi),(%dx)
     22a:	4e 75 6c             	rex.WRX jne 0x299
     22d:	6c                   	insb   (%dx),%es:(%rdi)
     22e:	3a 3a                	cmp    (%rdx),%bh
     230:	6e                   	outsb  %ds:(%rsi),(%dx)
     231:	65 77 5f             	gs ja  0x293
     234:	75 6e                	jne    0x2a4
     236:	63 68 65             	movsxd 0x65(%rax),%ebp
     239:	63 6b 65             	movsxd 0x65(%rbx),%ebp
     23c:	64 20 72 65          	and    %dh,%fs:0x65(%rdx)
     240:	71 75                	jno    0x2b7
     242:	69 72 65 73 20 74 68 	imul   $0x68742073,0x65(%rdx),%esi
     249:	61                   	(bad)  
     24a:	74 20                	je     0x26c
     24c:	74 68                	je     0x2b6
     24e:	65 20 70 6f          	and    %dh,%gs:0x6f(%rax)
     252:	69 6e 74 65 72 20 69 	imul   $0x69207265,0x74(%rsi),%ebp
     259:	73 20                	jae    0x27b
     25b:	6e                   	outsb  %ds:(%rsi),(%dx)
     25c:	6f                   	outsl  %ds:(%rsi),(%dx)
     25d:	6e                   	outsb  %ds:(%rsi),(%dx)
     25e:	2d 6e 75 6c 6c       	sub    $0x6c6c756e,%eax
	...
    126f:	00 48 81             	add    %cl,-0x7f(%rax)
    1272:	ec                   	in     (%dx),%al
    1273:	b8 00 00 00 b8       	mov    $0xb8000000,%eax
    1278:	00 80 0b 00 48 89    	add    %al,-0x76b7fff5(%rax)
    127e:	84 24 80             	test   %ah,(%rax,%rax,4)
    1281:	00 00                	add    %al,(%rax)
    1283:	00 48 8b             	add    %cl,-0x75(%rax)
    1286:	3d a5 19 00 00       	cmp    $0x19a5,%eax
    128b:	48 8b 35 a6 19 00 00 	mov    0x19a6(%rip),%rsi        # 0x2c38
    1292:	e8 19 08 00 00       	call   0x1ab0
    1297:	48 89 c6             	mov    %rax,%rsi
    129a:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    129f:	e8 7c 01 00 00       	call   0x1420
    12a4:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
    12a9:	48 8d 74 24 40       	lea    0x40(%rsp),%rsi
    12ae:	e8 dd 07 00 00       	call   0x1a90
    12b3:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    12b8:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    12bd:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    12c2:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    12c7:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    12cc:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    12d1:	48 8d 7c 24 58       	lea    0x58(%rsp),%rdi
    12d6:	e8 d5 06 00 00       	call   0x19b0
    12db:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    12e0:	48 89 54 24 78       	mov    %rdx,0x78(%rsp)
    12e5:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
    12ea:	b8 01 00 00 00       	mov    $0x1,%eax
    12ef:	31 c9                	xor    %ecx,%ecx
    12f1:	48 83 fa 00          	cmp    $0x0,%rdx
    12f5:	48 0f 44 c1          	cmove  %rcx,%rax
    12f9:	48 83 f8 00          	cmp    $0x0,%rax
    12fd:	75 02                	jne    0x1301
    12ff:	eb fe                	jmp    0x12ff
    1301:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    1306:	8a 00                	mov    (%rax),%al
    1308:	88 44 24 17          	mov    %al,0x17(%rsp)
    130c:	88 84 24 8f 00 00 00 	mov    %al,0x8f(%rsp)
    1313:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    1318:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    131d:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
    1324:	00 
    1325:	b9 02 00 00 00       	mov    $0x2,%ecx
    132a:	48 0f af c1          	imul   %rcx,%rax
    132e:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    1333:	0f 90 c0             	seto   %al
    1336:	a8 01                	test   $0x1,%al
    1338:	75 44                	jne    0x137e
    133a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    133f:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    1344:	40 8a 74 24 17       	mov    0x17(%rsp),%sil
    1349:	b9 00 80 0b 00       	mov    $0xb8000,%ecx
    134e:	48 89 8c 24 a8 00 00 	mov    %rcx,0xa8(%rsp)
    1355:	00 
    1356:	48 89 94 24 b0 00 00 	mov    %rdx,0xb0(%rsp)
    135d:	00 
    135e:	b9 00 80 0b 00       	mov    $0xb8000,%ecx
    1363:	40 88 34 11          	mov    %sil,(%rcx,%rdx,1)
    1367:	b9 02 00 00 00       	mov    $0x2,%ecx
    136c:	48 0f af c1          	imul   %rcx,%rax
    1370:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1375:	0f 90 c0             	seto   %al
    1378:	a8 01                	test   $0x1,%al
    137a:	75 2f                	jne    0x13ab
    137c:	eb 18                	jmp    0x1396
    137e:	48 8d 3d ab ec ff ff 	lea    -0x1355(%rip),%rdi        # 0x30
    1385:	48 8d 15 b4 18 00 00 	lea    0x18b4(%rip),%rdx        # 0x2c40
    138c:	be 21 00 00 00       	mov    $0x21,%esi
    1391:	e8 4a 05 00 00       	call   0x18e0
    1396:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    139b:	48 ff c0             	inc    %rax
    139e:	48 89 04 24          	mov    %rax,(%rsp)
    13a2:	0f 90 c0             	seto   %al
    13a5:	a8 01                	test   $0x1,%al
    13a7:	75 41                	jne    0x13ea
    13a9:	eb 18                	jmp    0x13c3
    13ab:	48 8d 3d 7e ec ff ff 	lea    -0x1382(%rip),%rdi        # 0x30
    13b2:	48 8d 15 9f 18 00 00 	lea    0x189f(%rip),%rdx        # 0x2c58
    13b9:	be 21 00 00 00       	mov    $0x21,%esi
    13be:	e8 1d 05 00 00       	call   0x18e0
    13c3:	48 8b 0c 24          	mov    (%rsp),%rcx
    13c7:	b8 00 80 0b 00       	mov    $0xb8000,%eax
    13cc:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
    13d3:	00 
    13d4:	48 89 8c 24 a0 00 00 	mov    %rcx,0xa0(%rsp)
    13db:	00 
    13dc:	b8 00 80 0b 00       	mov    $0xb8000,%eax
    13e1:	c6 04 08 0b          	movb   $0xb,(%rax,%rcx,1)
    13e5:	e9 e7 fe ff ff       	jmp    0x12d1
    13ea:	48 8d 3d 6f ec ff ff 	lea    -0x1391(%rip),%rdi        # 0x60
    13f1:	48 8d 15 60 18 00 00 	lea    0x1860(%rip),%rdx        # 0x2c58
    13f8:	be 1c 00 00 00       	mov    $0x1c,%esi
    13fd:	e8 de 04 00 00       	call   0x18e0
    1402:	cc                   	int3   
    1403:	cc                   	int3   
    1404:	cc                   	int3   
    1405:	cc                   	int3   
    1406:	cc                   	int3   
    1407:	cc                   	int3   
    1408:	cc                   	int3   
    1409:	cc                   	int3   
    140a:	cc                   	int3   
    140b:	cc                   	int3   
    140c:	cc                   	int3   
    140d:	cc                   	int3   
    140e:	cc                   	int3   
    140f:	cc                   	int3   
    1410:	50                   	push   %rax
    1411:	48 89 3c 24          	mov    %rdi,(%rsp)
    1415:	eb fe                	jmp    0x1415
    1417:	cc                   	int3   
    1418:	cc                   	int3   
    1419:	cc                   	int3   
    141a:	cc                   	int3   
    141b:	cc                   	int3   
    141c:	cc                   	int3   
    141d:	cc                   	int3   
    141e:	cc                   	int3   
    141f:	cc                   	int3   
    1420:	48 83 ec 18          	sub    $0x18,%rsp
    1424:	48 89 f8             	mov    %rdi,%rax
    1427:	48 89 04 24          	mov    %rax,(%rsp)
    142b:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    1430:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    1435:	e8 46 05 00 00       	call   0x1980
    143a:	48 8b 04 24          	mov    (%rsp),%rax
    143e:	48 83 c4 18          	add    $0x18,%rsp
    1442:	c3                   	ret    
    1443:	cc                   	int3   
    1444:	cc                   	int3   
    1445:	cc                   	int3   
    1446:	cc                   	int3   
    1447:	cc                   	int3   
    1448:	cc                   	int3   
    1449:	cc                   	int3   
    144a:	cc                   	int3   
    144b:	cc                   	int3   
    144c:	cc                   	int3   
    144d:	cc                   	int3   
    144e:	cc                   	int3   
    144f:	cc                   	int3   
    1450:	48 83 ec 68          	sub    $0x68,%rsp
    1454:	48 89 34 24          	mov    %rsi,(%rsp)
    1458:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    145d:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
    1462:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
    1467:	48 89 7c 24 58       	mov    %rdi,0x58(%rsp)
    146c:	48 89 74 24 60       	mov    %rsi,0x60(%rsp)
    1471:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
    1476:	31 c0                	xor    %eax,%eax
    1478:	a8 01                	test   $0x1,%al
    147a:	75 1d                	jne    0x1499
    147c:	48 8b 0c 24          	mov    (%rsp),%rcx
    1480:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1485:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    148a:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
    148f:	48 01 c8             	add    %rcx,%rax
    1492:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    1497:	eb 0e                	jmp    0x14a7
    1499:	48 8b 04 24          	mov    (%rsp),%rax
    149d:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    14a2:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    14a7:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    14ac:	e8 cf 06 00 00       	call   0x1b80
    14b1:	48 89 c1             	mov    %rax,%rcx
    14b4:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    14b9:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    14be:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    14c3:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    14c8:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    14cd:	48 83 c4 68          	add    $0x68,%rsp
    14d1:	c3                   	ret    
    14d2:	cc                   	int3   
    14d3:	cc                   	int3   
    14d4:	cc                   	int3   
    14d5:	cc                   	int3   
    14d6:	cc                   	int3   
    14d7:	cc                   	int3   
    14d8:	cc                   	int3   
    14d9:	cc                   	int3   
    14da:	cc                   	int3   
    14db:	cc                   	int3   
    14dc:	cc                   	int3   
    14dd:	cc                   	int3   
    14de:	cc                   	int3   
    14df:	cc                   	int3   
    14e0:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
    14e7:	48 89 3c 24          	mov    %rdi,(%rsp)
    14eb:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
    14f0:	31 c0                	xor    %eax,%eax
    14f2:	a8 01                	test   $0x1,%al
    14f4:	75 2b                	jne    0x1521
    14f6:	48 8b 3c 24          	mov    (%rsp),%rdi
    14fa:	48 89 f8             	mov    %rdi,%rax
    14fd:	48 83 c0 08          	add    $0x8,%rax
    1501:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    1506:	48 8b 47 08          	mov    0x8(%rdi),%rax
    150a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    150f:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
    1514:	e8 c7 06 00 00       	call   0x1be0
    1519:	24 01                	and    $0x1,%al
    151b:	88 44 24 17          	mov    %al,0x17(%rsp)
    151f:	eb 24                	jmp    0x1545
    1521:	48 8b 04 24          	mov    (%rsp),%rax
    1525:	48 8b 40 08          	mov    0x8(%rax),%rax
    1529:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    152e:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    1533:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    1538:	48 83 f8 00          	cmp    $0x0,%rax
    153c:	0f 94 c0             	sete   %al
    153f:	24 01                	and    $0x1,%al
    1541:	88 44 24 17          	mov    %al,0x17(%rsp)
    1545:	f6 44 24 17 01       	testb  $0x1,0x17(%rsp)
    154a:	0f 85 84 00 00 00    	jne    0x15d4
    1550:	48 8b 0c 24          	mov    (%rsp),%rcx
    1554:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
    1559:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
    1560:	00 00 
    1562:	48 8b 01             	mov    (%rcx),%rax
    1565:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    156a:	48 89 ca             	mov    %rcx,%rdx
    156d:	48 83 c2 08          	add    $0x8,%rdx
    1571:	48 89 94 24 a0 00 00 	mov    %rdx,0xa0(%rsp)
    1578:	00 
    1579:	48 89 94 24 80 00 00 	mov    %rdx,0x80(%rsp)
    1580:	00 
    1581:	48 8b 11             	mov    (%rcx),%rdx
    1584:	48 89 94 24 90 00 00 	mov    %rdx,0x90(%rsp)
    158b:	00 
    158c:	48 c7 84 24 98 00 00 	movq   $0x1,0x98(%rsp)
    1593:	00 01 00 00 00 
    1598:	48 83 c2 01          	add    $0x1,%rdx
    159c:	48 89 94 24 88 00 00 	mov    %rdx,0x88(%rsp)
    15a3:	00 
    15a4:	48 8b 94 24 88 00 00 	mov    0x88(%rsp),%rdx
    15ab:	00 
    15ac:	48 89 11             	mov    %rdx,(%rcx)
    15af:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    15b4:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    15b9:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    15be:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    15c3:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    15c8:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    15cd:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    15d2:	eb 09                	jmp    0x15dd
    15d4:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    15db:	00 00 
    15dd:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    15e2:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
    15e9:	c3                   	ret    
    15ea:	cc                   	int3   
    15eb:	cc                   	int3   
    15ec:	cc                   	int3   
    15ed:	cc                   	int3   
    15ee:	cc                   	int3   
    15ef:	cc                   	int3   
    15f0:	48 83 ec 18          	sub    $0x18,%rsp
    15f4:	48 89 3c 24          	mov    %rdi,(%rsp)
    15f8:	48 8b 14 24          	mov    (%rsp),%rdx
    15fc:	b8 01 00 00 00       	mov    $0x1,%eax
    1601:	31 c9                	xor    %ecx,%ecx
    1603:	48 83 fa 00          	cmp    $0x0,%rdx
    1607:	48 0f 44 c1          	cmove  %rcx,%rax
    160b:	48 83 f8 00          	cmp    $0x0,%rax
    160f:	75 0b                	jne    0x161c
    1611:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    1618:	00 00 
    161a:	eb 0e                	jmp    0x162a
    161c:	48 8b 04 24          	mov    (%rsp),%rax
    1620:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    1625:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    162a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    162f:	48 83 c4 18          	add    $0x18,%rsp
    1633:	c3                   	ret    
    1634:	cc                   	int3   
    1635:	cc                   	int3   
    1636:	cc                   	int3   
    1637:	cc                   	int3   
    1638:	cc                   	int3   
    1639:	cc                   	int3   
    163a:	cc                   	int3   
    163b:	cc                   	int3   
    163c:	cc                   	int3   
    163d:	cc                   	int3   
    163e:	cc                   	int3   
    163f:	cc                   	int3   
    1640:	48 83 ec 20          	sub    $0x20,%rsp
    1644:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    164b:	00 00 
    164d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1652:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    1657:	48 83 c4 20          	add    $0x20,%rsp
    165b:	c3                   	ret    
    165c:	cc                   	int3   
    165d:	cc                   	int3   
    165e:	cc                   	int3   
    165f:	cc                   	int3   
    1660:	48 83 ec 18          	sub    $0x18,%rsp
    1664:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
    1669:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    166e:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    1673:	e8 18 00 00 00       	call   0x1690
    1678:	24 01                	and    $0x1,%al
    167a:	0f b6 c0             	movzbl %al,%eax
    167d:	48 83 c4 18          	add    $0x18,%rsp
    1681:	c3                   	ret    
    1682:	cc                   	int3   
    1683:	cc                   	int3   
    1684:	cc                   	int3   
    1685:	cc                   	int3   
    1686:	cc                   	int3   
    1687:	cc                   	int3   
    1688:	cc                   	int3   
    1689:	cc                   	int3   
    168a:	cc                   	int3   
    168b:	cc                   	int3   
    168c:	cc                   	int3   
    168d:	cc                   	int3   
    168e:	cc                   	int3   
    168f:	cc                   	int3   
    1690:	48 83 ec 18          	sub    $0x18,%rsp
    1694:	48 89 3c 24          	mov    %rdi,(%rsp)
    1698:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    169d:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
    16a2:	48 83 ff 00          	cmp    $0x0,%rdi
    16a6:	0f 94 c0             	sete   %al
    16a9:	24 01                	and    $0x1,%al
    16ab:	0f b6 c0             	movzbl %al,%eax
    16ae:	48 83 c4 18          	add    $0x18,%rsp
    16b2:	c3                   	ret    
    16b3:	cc                   	int3   
    16b4:	cc                   	int3   
    16b5:	cc                   	int3   
    16b6:	cc                   	int3   
    16b7:	cc                   	int3   
    16b8:	cc                   	int3   
    16b9:	cc                   	int3   
    16ba:	cc                   	int3   
    16bb:	cc                   	int3   
    16bc:	cc                   	int3   
    16bd:	cc                   	int3   
    16be:	cc                   	int3   
    16bf:	cc                   	int3   
    16c0:	48 83 ec 38          	sub    $0x38,%rsp
    16c4:	48 b8 6e 51 77 ed 22 	movabs $0xb71ae022ed77516e,%rax
    16cb:	e0 1a b7 
    16ce:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    16d3:	48 b8 6e 09 6a 77 2f 	movabs $0x7450ad2f776a096e,%rax
    16da:	ad 50 74 
    16dd:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    16e2:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    16e7:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    16ec:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
    16f1:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    16f6:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    16fb:	48 89 04 24          	mov    %rax,(%rsp)
    16ff:	48 8b 04 24          	mov    (%rsp),%rax
    1703:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    1708:	48 83 c4 38          	add    $0x38,%rsp
    170c:	c3                   	ret    
    170d:	cc                   	int3   
    170e:	cc                   	int3   
    170f:	cc                   	int3   
    1710:	48 83 ec 78          	sub    $0x78,%rsp
    1714:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    1719:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    171e:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    1723:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
    1728:	48 89 74 24 68       	mov    %rsi,0x68(%rsp)
    172d:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
    1732:	48 83 fa 01          	cmp    $0x1,%rdx
    1736:	77 4e                	ja     0x1786
    1738:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    173d:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    1742:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    1747:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    174c:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
    1753:	00 00 
    1755:	48 89 31             	mov    %rsi,(%rcx)
    1758:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    175c:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
    1761:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
    1766:	48 89 71 20          	mov    %rsi,0x20(%rcx)
    176a:	48 89 51 28          	mov    %rdx,0x28(%rcx)
    176e:	48 8d 15 0b e9 ff ff 	lea    -0x16f5(%rip),%rdx        # 0x80
    1775:	48 89 51 10          	mov    %rdx,0x10(%rcx)
    1779:	48 c7 41 18 00 00 00 	movq   $0x0,0x18(%rcx)
    1780:	00 
    1781:	48 83 c4 78          	add    $0x78,%rsp
    1785:	c3                   	ret    
    1786:	48 8d 35 e3 14 00 00 	lea    0x14e3(%rip),%rsi        # 0x2c70
    178d:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
    1792:	48 89 3c 24          	mov    %rdi,(%rsp)
    1796:	ba 01 00 00 00       	mov    $0x1,%edx
    179b:	e8 70 ff ff ff       	call   0x1710
    17a0:	48 8b 3c 24          	mov    (%rsp),%rdi
    17a4:	48 8d 35 d5 14 00 00 	lea    0x14d5(%rip),%rsi        # 0x2c80
    17ab:	e8 00 00 00 00       	call   0x17b0
    17b0:	48 83 ec 48          	sub    $0x48,%rsp
    17b4:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    17b9:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
    17be:	31 c0                	xor    %eax,%eax
    17c0:	a8 01                	test   $0x1,%al
    17c2:	75 3b                	jne    0x17ff
    17c4:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    17c9:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    17ce:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    17d3:	e8 98 03 00 00       	call   0x1b70
    17d8:	48 89 c2             	mov    %rax,%rdx
    17db:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    17e0:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    17e5:	48 89 3c 24          	mov    %rdi,(%rsp)
    17e9:	b9 01 00 00 00       	mov    $0x1,%ecx
    17ee:	45 31 c0             	xor    %r8d,%r8d
    17f1:	e8 fa 02 00 00       	call   0x1af0
    17f6:	48 8b 3c 24          	mov    (%rsp),%rdi
    17fa:	e8 11 fc ff ff       	call   0x1410
    17ff:	0f 0b                	ud2    
    1801:	cc                   	int3   
    1802:	cc                   	int3   
    1803:	cc                   	int3   
    1804:	cc                   	int3   
    1805:	cc                   	int3   
    1806:	cc                   	int3   
    1807:	cc                   	int3   
    1808:	cc                   	int3   
    1809:	cc                   	int3   
    180a:	cc                   	int3   
    180b:	cc                   	int3   
    180c:	cc                   	int3   
    180d:	cc                   	int3   
    180e:	cc                   	int3   
    180f:	cc                   	int3   
    1810:	48 83 ec 48          	sub    $0x48,%rsp
    1814:	40 88 f0             	mov    %sil,%al
    1817:	24 01                	and    $0x1,%al
    1819:	88 44 24 47          	mov    %al,0x47(%rsp)
    181d:	48 8b 4f 28          	mov    0x28(%rdi),%rcx
    1821:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
    1826:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
    182a:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
    182f:	48 8b 4f 18          	mov    0x18(%rdi),%rcx
    1833:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
    1838:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
    183c:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    1841:	48 8b 0f             	mov    (%rdi),%rcx
    1844:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    1848:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    184d:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    1852:	88 44 24 38          	mov    %al,0x38(%rsp)
    1856:	0f b6 74 24 38       	movzbl 0x38(%rsp),%esi
    185b:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    1860:	e8 0b 00 00 00       	call   0x1870
    1865:	cc                   	int3   
    1866:	cc                   	int3   
    1867:	cc                   	int3   
    1868:	cc                   	int3   
    1869:	cc                   	int3   
    186a:	cc                   	int3   
    186b:	cc                   	int3   
    186c:	cc                   	int3   
    186d:	cc                   	int3   
    186e:	cc                   	int3   
    186f:	cc                   	int3   
    1870:	48 83 ec 58          	sub    $0x58,%rsp
    1874:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    1879:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
    187e:	40 88 f0             	mov    %sil,%al
    1881:	88 44 24 1f          	mov    %al,0x1f(%rsp)
    1885:	24 01                	and    $0x1,%al
    1887:	88 44 24 57          	mov    %al,0x57(%rsp)
    188b:	31 c0                	xor    %eax,%eax
    188d:	a8 01                	test   $0x1,%al
    188f:	75 41                	jne    0x18d2
    1891:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    1896:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    189b:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    18a0:	e8 cb 02 00 00       	call   0x1b70
    18a5:	48 89 c2             	mov    %rax,%rdx
    18a8:	8a 44 24 1f          	mov    0x1f(%rsp),%al
    18ac:	48 8b 74 24 48       	mov    0x48(%rsp),%rsi
    18b1:	44 0f b6 c0          	movzbl %al,%r8d
    18b5:	41 83 e0 01          	and    $0x1,%r8d
    18b9:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    18be:	48 89 3c 24          	mov    %rdi,(%rsp)
    18c2:	31 c9                	xor    %ecx,%ecx
    18c4:	e8 27 02 00 00       	call   0x1af0
    18c9:	48 8b 3c 24          	mov    (%rsp),%rdi
    18cd:	e8 3e fb ff ff       	call   0x1410
    18d2:	0f 0b                	ud2    
    18d4:	cc                   	int3   
    18d5:	cc                   	int3   
    18d6:	cc                   	int3   
    18d7:	cc                   	int3   
    18d8:	cc                   	int3   
    18d9:	cc                   	int3   
    18da:	cc                   	int3   
    18db:	cc                   	int3   
    18dc:	cc                   	int3   
    18dd:	cc                   	int3   
    18de:	cc                   	int3   
    18df:	cc                   	int3   
    18e0:	48 83 ec 68          	sub    $0x68,%rsp
    18e4:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    18e9:	48 89 7c 24 58       	mov    %rdi,0x58(%rsp)
    18ee:	48 89 74 24 60       	mov    %rsi,0x60(%rsp)
    18f3:	48 89 7c 24 48       	mov    %rdi,0x48(%rsp)
    18f8:	48 89 74 24 50       	mov    %rsi,0x50(%rsp)
    18fd:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    1902:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    1907:	48 8d 74 24 48       	lea    0x48(%rsp),%rsi
    190c:	ba 01 00 00 00       	mov    $0x1,%edx
    1911:	e8 fa fd ff ff       	call   0x1710
    1916:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    191b:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    1920:	e8 8b fe ff ff       	call   0x17b0
    1925:	cc                   	int3   
    1926:	cc                   	int3   
    1927:	cc                   	int3   
    1928:	cc                   	int3   
    1929:	cc                   	int3   
    192a:	cc                   	int3   
    192b:	cc                   	int3   
    192c:	cc                   	int3   
    192d:	cc                   	int3   
    192e:	cc                   	int3   
    192f:	cc                   	int3   
    1930:	48 83 ec 58          	sub    $0x58,%rsp
    1934:	48 89 7c 24 48       	mov    %rdi,0x48(%rsp)
    1939:	48 89 74 24 50       	mov    %rsi,0x50(%rsp)
    193e:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
    1943:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
    1948:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    194d:	48 89 3c 24          	mov    %rdi,(%rsp)
    1951:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
    1956:	ba 01 00 00 00       	mov    $0x1,%edx
    195b:	e8 b0 fd ff ff       	call   0x1710
    1960:	48 8b 3c 24          	mov    (%rsp),%rdi
    1964:	48 8d 15 2d 13 00 00 	lea    0x132d(%rip),%rdx        # 0x2c98
    196b:	31 f6                	xor    %esi,%esi
    196d:	e8 9e fe ff ff       	call   0x1810
    1972:	cc                   	int3   
    1973:	cc                   	int3   
    1974:	cc                   	int3   
    1975:	cc                   	int3   
    1976:	cc                   	int3   
    1977:	cc                   	int3   
    1978:	cc                   	int3   
    1979:	cc                   	int3   
    197a:	cc                   	int3   
    197b:	cc                   	int3   
    197c:	cc                   	int3   
    197d:	cc                   	int3   
    197e:	cc                   	int3   
    197f:	cc                   	int3   
    1980:	48 83 ec 10          	sub    $0x10,%rsp
    1984:	48 89 f8             	mov    %rdi,%rax
    1987:	48 89 34 24          	mov    %rsi,(%rsp)
    198b:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    1990:	48 89 37             	mov    %rsi,(%rdi)
    1993:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    1997:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
    199e:	00 
    199f:	48 83 c4 10          	add    $0x10,%rsp
    19a3:	c3                   	ret    
    19a4:	cc                   	int3   
    19a5:	cc                   	int3   
    19a6:	cc                   	int3   
    19a7:	cc                   	int3   
    19a8:	cc                   	int3   
    19a9:	cc                   	int3   
    19aa:	cc                   	int3   
    19ab:	cc                   	int3   
    19ac:	cc                   	int3   
    19ad:	cc                   	int3   
    19ae:	cc                   	int3   
    19af:	cc                   	int3   
    19b0:	48 83 ec 68          	sub    $0x68,%rsp
    19b4:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    19b9:	48 89 7c 24 50       	mov    %rdi,0x50(%rsp)
    19be:	e8 1d fb ff ff       	call   0x14e0
    19c3:	48 89 c7             	mov    %rax,%rdi
    19c6:	e8 25 fc ff ff       	call   0x15f0
    19cb:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    19d0:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    19d5:	31 c0                	xor    %eax,%eax
    19d7:	b9 01 00 00 00       	mov    $0x1,%ecx
    19dc:	48 83 fa 00          	cmp    $0x0,%rdx
    19e0:	48 0f 44 c1          	cmove  %rcx,%rax
    19e4:	48 83 f8 00          	cmp    $0x0,%rax
    19e8:	75 37                	jne    0x1a21
    19ea:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    19ef:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    19f4:	48 89 0c 24          	mov    %rcx,(%rsp)
    19f8:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
    19fd:	48 8b 48 10          	mov    0x10(%rax),%rcx
    1a01:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    1a06:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
    1a0b:	48 8b 40 10          	mov    0x10(%rax),%rax
    1a0f:	48 83 c0 01          	add    $0x1,%rax
    1a13:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    1a18:	0f 92 c0             	setb   %al
    1a1b:	a8 01                	test   $0x1,%al
    1a1d:	75 4a                	jne    0x1a69
    1a1f:	eb 11                	jmp    0x1a32
    1a21:	e8 1a fc ff ff       	call   0x1640
    1a26:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    1a2b:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
    1a30:	eb 4f                	jmp    0x1a81
    1a32:	48 8b 04 24          	mov    (%rsp),%rax
    1a36:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    1a3b:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    1a40:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    1a45:	48 89 72 10          	mov    %rsi,0x10(%rdx)
    1a49:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
    1a4e:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    1a53:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
    1a58:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    1a5d:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
    1a62:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    1a67:	eb 18                	jmp    0x1a81
    1a69:	48 8d 3d 00 e7 ff ff 	lea    -0x1900(%rip),%rdi        # 0x170
    1a70:	48 8d 15 39 12 00 00 	lea    0x1239(%rip),%rdx        # 0x2cb0
    1a77:	be 1c 00 00 00       	mov    $0x1c,%esi
    1a7c:	e8 5f fe ff ff       	call   0x18e0
    1a81:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    1a86:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    1a8b:	48 83 c4 68          	add    $0x68,%rsp
    1a8f:	c3                   	ret    
    1a90:	48 89 f8             	mov    %rdi,%rax
    1a93:	48 8b 0e             	mov    (%rsi),%rcx
    1a96:	48 89 0f             	mov    %rcx,(%rdi)
    1a99:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    1a9d:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    1aa1:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
    1aa5:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
    1aa9:	c3                   	ret    
    1aaa:	cc                   	int3   
    1aab:	cc                   	int3   
    1aac:	cc                   	int3   
    1aad:	cc                   	int3   
    1aae:	cc                   	int3   
    1aaf:	cc                   	int3   
    1ab0:	48 83 ec 18          	sub    $0x18,%rsp
    1ab4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    1ab9:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    1abe:	e8 8d f9 ff ff       	call   0x1450
    1ac3:	48 83 c4 18          	add    $0x18,%rsp
    1ac7:	c3                   	ret    
    1ac8:	cc                   	int3   
    1ac9:	cc                   	int3   
    1aca:	cc                   	int3   
    1acb:	cc                   	int3   
    1acc:	cc                   	int3   
    1acd:	cc                   	int3   
    1ace:	cc                   	int3   
    1acf:	cc                   	int3   
    1ad0:	50                   	push   %rax
    1ad1:	48 89 3c 24          	mov    %rdi,(%rsp)
    1ad5:	58                   	pop    %rax
    1ad6:	c3                   	ret    
    1ad7:	cc                   	int3   
    1ad8:	cc                   	int3   
    1ad9:	cc                   	int3   
    1ada:	cc                   	int3   
    1adb:	cc                   	int3   
    1adc:	cc                   	int3   
    1add:	cc                   	int3   
    1ade:	cc                   	int3   
    1adf:	cc                   	int3   
    1ae0:	50                   	push   %rax
    1ae1:	48 89 3c 24          	mov    %rdi,(%rsp)
    1ae5:	e8 d6 fb ff ff       	call   0x16c0
    1aea:	59                   	pop    %rcx
    1aeb:	c3                   	ret    
    1aec:	cc                   	int3   
    1aed:	cc                   	int3   
    1aee:	cc                   	int3   
    1aef:	cc                   	int3   
    1af0:	48 83 ec 28          	sub    $0x28,%rsp
    1af4:	44 89 44 24 04       	mov    %r8d,0x4(%rsp)
    1af9:	89 c8                	mov    %ecx,%eax
    1afb:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
    1aff:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    1b04:	49 89 f0             	mov    %rsi,%r8
    1b07:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    1b0c:	88 c2                	mov    %al,%dl
    1b0e:	48 89 f8             	mov    %rdi,%rax
    1b11:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    1b16:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    1b1b:	41 88 d1             	mov    %dl,%r9b
    1b1e:	41 80 e1 01          	and    $0x1,%r9b
    1b22:	44 88 4c 24 26       	mov    %r9b,0x26(%rsp)
    1b27:	41 88 c9             	mov    %cl,%r9b
    1b2a:	41 80 e1 01          	and    $0x1,%r9b
    1b2e:	44 88 4c 24 27       	mov    %r9b,0x27(%rsp)
    1b33:	4c 8d 0d cc e6 ff ff 	lea    -0x1934(%rip),%r9        # 0x206
    1b3a:	4c 89 0f             	mov    %r9,(%rdi)
    1b3d:	4c 8d 0d 84 11 00 00 	lea    0x1184(%rip),%r9        # 0x2cc8
    1b44:	4c 89 4f 08          	mov    %r9,0x8(%rdi)
    1b48:	4c 89 47 10          	mov    %r8,0x10(%rdi)
    1b4c:	48 89 77 18          	mov    %rsi,0x18(%rdi)
    1b50:	80 e2 01             	and    $0x1,%dl
    1b53:	88 57 20             	mov    %dl,0x20(%rdi)
    1b56:	80 e1 01             	and    $0x1,%cl
    1b59:	88 4f 21             	mov    %cl,0x21(%rdi)
    1b5c:	48 83 c4 28          	add    $0x28,%rsp
    1b60:	c3                   	ret    
    1b61:	cc                   	int3   
    1b62:	cc                   	int3   
    1b63:	cc                   	int3   
    1b64:	cc                   	int3   
    1b65:	cc                   	int3   
    1b66:	cc                   	int3   
    1b67:	cc                   	int3   
    1b68:	cc                   	int3   
    1b69:	cc                   	int3   
    1b6a:	cc                   	int3   
    1b6b:	cc                   	int3   
    1b6c:	cc                   	int3   
    1b6d:	cc                   	int3   
    1b6e:	cc                   	int3   
    1b6f:	cc                   	int3   
    1b70:	50                   	push   %rax
    1b71:	48 89 3c 24          	mov    %rdi,(%rsp)
    1b75:	48 8b 04 24          	mov    (%rsp),%rax
    1b79:	59                   	pop    %rcx
    1b7a:	c3                   	ret    
    1b7b:	cc                   	int3   
    1b7c:	cc                   	int3   
    1b7d:	cc                   	int3   
    1b7e:	cc                   	int3   
    1b7f:	cc                   	int3   
    1b80:	48 83 ec 28          	sub    $0x28,%rsp
    1b84:	48 89 3c 24          	mov    %rdi,(%rsp)
    1b88:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    1b8d:	b0 01                	mov    $0x1,%al
    1b8f:	a8 01                	test   $0x1,%al
    1b91:	75 13                	jne    0x1ba6
    1b93:	48 8b 04 24          	mov    (%rsp),%rax
    1b97:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1b9c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1ba1:	48 83 c4 28          	add    $0x28,%rsp
    1ba5:	c3                   	ret    
    1ba6:	48 8b 04 24          	mov    (%rsp),%rax
    1baa:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    1baf:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    1bb4:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
    1bb9:	e8 a2 fa ff ff       	call   0x1660
    1bbe:	a8 01                	test   $0x1,%al
    1bc0:	75 02                	jne    0x1bc4
    1bc2:	eb 11                	jmp    0x1bd5
    1bc4:	48 8d 3d 3b e6 ff ff 	lea    -0x19c5(%rip),%rdi        # 0x206
    1bcb:	be 5d 00 00 00       	mov    $0x5d,%esi
    1bd0:	e8 5b fd ff ff       	call   0x1930
    1bd5:	eb bc                	jmp    0x1b93
    1bd7:	cc                   	int3   
    1bd8:	cc                   	int3   
    1bd9:	cc                   	int3   
    1bda:	cc                   	int3   
    1bdb:	cc                   	int3   
    1bdc:	cc                   	int3   
    1bdd:	cc                   	int3   
    1bde:	cc                   	int3   
    1bdf:	cc                   	int3   
    1be0:	48 83 ec 20          	sub    $0x20,%rsp
    1be4:	48 89 3c 24          	mov    %rdi,(%rsp)
    1be8:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    1bed:	48 8b 07             	mov    (%rdi),%rax
    1bf0:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    1bf5:	48 8b 0e             	mov    (%rsi),%rcx
    1bf8:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    1bfd:	48 39 c8             	cmp    %rcx,%rax
    1c00:	0f 94 c0             	sete   %al
    1c03:	24 01                	and    $0x1,%al
    1c05:	0f b6 c0             	movzbl %al,%eax
    1c08:	48 83 c4 20          	add    $0x20,%rsp
    1c0c:	c3                   	ret    
    1c0d:	cc                   	int3   
    1c0e:	cc                   	int3   
    1c0f:	cc                   	int3   
    1c10:	48 b8 4f 2f 4b 2f 41 	movabs $0x1f592f412f4b2f4f,%rax
    1c17:	2f 59 1f 
    1c1a:	48 89 04 25 00 80 0b 	mov    %rax,0xb8000
    1c21:	00 
    1c22:	e8 49 f6 ff ff       	call   0x1270
    1c27:	eb fe                	jmp    0x1c27
	...
    2c2d:	00 00                	add    %al,(%rax)
    2c2f:	00 90 01 20 00 00    	add    %dl,0x2001(%rax)
    2c35:	00 00                	add    %al,(%rax)
    2c37:	00 16                	add    %dl,(%rsi)
    2c39:	00 00                	add    %al,(%rax)
    2c3b:	00 00                	add    %al,(%rax)
    2c3d:	00 00                	add    %al,(%rax)
    2c3f:	00 a6 01 20 00 00    	add    %ah,0x2001(%rsi)
    2c45:	00 00                	add    %al,(%rax)
    2c47:	00 0b                	add    %cl,(%rbx)
    2c49:	00 00                	add    %al,(%rax)
    2c4b:	00 00                	add    %al,(%rax)
    2c4d:	00 00                	add    %al,(%rax)
    2c4f:	00 0e                	add    %cl,(%rsi)
    2c51:	00 00                	add    %al,(%rax)
    2c53:	00 20                	add    %ah,(%rax)
    2c55:	00 00                	add    %al,(%rax)
    2c57:	00 a6 01 20 00 00    	add    %ah,0x2001(%rsi)
    2c5d:	00 00                	add    %al,(%rax)
    2c5f:	00 0b                	add    %cl,(%rbx)
    2c61:	00 00                	add    %al,(%rax)
    2c63:	00 00                	add    %al,(%rax)
    2c65:	00 00                	add    %al,(%rax)
    2c67:	00 0f                	add    %cl,(%rdi)
    2c69:	00 00                	add    %al,(%rax)
    2c6b:	00 20                	add    %ah,(%rax)
    2c6d:	00 00                	add    %al,(%rax)
    2c6f:	00 10                	add    %dl,(%rax)
    2c71:	02 20                	add    (%rax),%ah
    2c73:	00 00                	add    %al,(%rax)
    2c75:	00 00                	add    %al,(%rax)
    2c77:	00 0c 00             	add    %cl,(%rax,%rax,1)
    2c7a:	00 00                	add    %al,(%rax)
    2c7c:	00 00                	add    %al,(%rax)
    2c7e:	00 00                	add    %al,(%rax)
    2c80:	1c 02                	sbb    $0x2,%al
    2c82:	20 00                	and    %al,(%rax)
    2c84:	00 00                	add    %al,(%rax)
    2c86:	00 00                	add    %al,(%rax)
    2c88:	6a 00                	push   $0x0
    2c8a:	00 00                	add    %al,(%rax)
    2c8c:	00 00                	add    %al,(%rax)
    2c8e:	00 00                	add    %al,(%rax)
    2c90:	43 01 00             	rex.XB add %eax,(%r8)
    2c93:	00 0d 00 00 00 86    	add    %cl,-0x7a000000(%rip)        # 0xffffffff86002c99
    2c99:	02 20                	add    (%rax),%ah
    2c9b:	00 00                	add    %al,(%rax)
    2c9d:	00 00                	add    %al,(%rax)
    2c9f:	00 6c 00 00          	add    %ch,0x0(%rax,%rax,1)
    2ca3:	00 00                	add    %al,(%rax)
    2ca5:	00 00                	add    %al,(%rax)
    2ca7:	00 9b 00 00 00 05    	add    %bl,0x5000000(%rbx)
    2cad:	00 00                	add    %al,(%rax)
    2caf:	00 1c 03             	add    %bl,(%rbx,%rax,1)
    2cb2:	20 00                	and    %al,(%rax)
    2cb4:	00 00                	add    %al,(%rax)
    2cb6:	00 00                	add    %al,(%rax)
    2cb8:	7a 00                	jp     0x2cba
    2cba:	00 00                	add    %al,(%rax)
    2cbc:	00 00                	add    %al,(%rax)
    2cbe:	00 00                	add    %al,(%rax)
    2cc0:	31 00                	xor    %eax,(%rax)
    2cc2:	00 00                	add    %al,(%rax)
    2cc4:	09 00                	or     %eax,(%rax)
    2cc6:	00 00                	add    %al,(%rax)
    2cc8:	60                   	(bad)  
    2cc9:	1c 20                	sbb    $0x20,%al
	...
    2cd7:	00 01                	add    %al,(%rcx)
    2cd9:	00 00                	add    %al,(%rax)
    2cdb:	00 00                	add    %al,(%rax)
    2cdd:	00 00                	add    %al,(%rax)
    2cdf:	00 70 1c             	add    %dh,0x1c(%rax)
    2ce2:	20 00                	and    %al,(%rax)
    2ce4:	00 00                	add    %al,(%rax)
	...
